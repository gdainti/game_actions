var Api={call:function(t,n,s,e){var e=e||function(){},t=t||"GET",s=s||"",o=new XMLHttpRequest;o.open(t,n),o.onload=function(){if(200!==o.status)throw new Error("Неверный запрос, status="+o.status);e(JSON.parse(o.responseText))},o.send(s)}};
var App=function(){"use strict";var t={actions:[],currentPoints:0,appendHtml:function(t,i){var n=document.createElement("div");for(n.innerHTML=i;n.children.length>0;)t.appendChild(n.children[0])},formatTime:function(t){Number.prototype.pad=function(t){for(var i=String(this);i.length<(t||2);)i="0"+i;return i};var i=Math.floor(t/60),n=t-60*i;return i.pad()+":"+n.pad()},setTime:function(t,i){var n=t.getElementsByClassName("js-action-time");n[0].innerHTML=this.formatTime(i)},showAction:function(t){var i=['<div id="js-action-{id}" title="{title}" class="js-action-click action action--{id}" data-id="{id}" onclick="App.actionClick(this)">','<div class="action__image"></div>','<div class="js-action-time action__time"></div>',"</div>"].join("");i=i.replace(/{[^{}]+}/g,function(i){return t[i.replace(/[{}]+/g,"")]||""}),this.appendHtml(document.getElementById("js-actions"),i)},getActionById:function(i){for(var n=0;n<t.actions.length;n++)if(t.actions[n].id==i)return t.actions[n];return!1},updatePoints:function(i){t.currentPoints=i;var n=document.getElementById("js-current-points");n.innerHTML=i},actionClick:function(i){var n=i.getAttribute("data-id"),e=t.getActionById(n);e.active===!0&&t.makeAction(i,e)},makeAction:function(i,n){var e=t.currentPoints+n.points;Api.call("POST","api/index.php","actionId="+n.id,function(){t.updatePoints(e),t.disableAction(i,n)})},disableAction:function(i,n){n.active=!1,Class.addClass(i,"action--inactive"),t.setTime(i,n.recovery_time);var e=n.recovery_time,c=setInterval(function(){e>1?(e--,t.setTime(i,e)):(t.enableAction(i,n),clearTimeout(c))},1e3)},enableAction:function(t,i){i.active=!0,Class.removeClass(t,"action--inactive")},init:function(){Api.call("GET","api/index.php",{},function(i){if("ok"==i.status&&i.current_points&&i.actions){t.actions=i.actions,t.updatePoints(i.current_points);for(var n=0;n<t.actions.length;n++)t.actions[n].active=!0,t.showAction(t.actions[n])}})}};return t.init(),{actionClick:t.actionClick}}();
var Class=function(){return{hasClass:function(s,a){return!!s.className.match(new RegExp("(\\s|^)"+a+"(\\s|$)"))},addClass:function(s,a){this.hasClass(s,a)||(s.className+=" "+a)},removeClass:function(s,a){if(this.hasClass(s,a)){var e=new RegExp("(\\s|^)"+a+"(\\s|$)");s.className=s.className.replace(e," ")}}}}();
//# sourceMappingURL=data:application/json;base64,
